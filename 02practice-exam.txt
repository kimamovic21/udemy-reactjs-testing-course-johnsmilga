Practice Test 2: Testing with Mock Service Worker

1. To simulate API responses for testing without real server requests, we use the library: 
- MSW (Mock Service Worker)

2. The function used to mock a GET request and return mock data in MSW is: - http.get

3. Which of the following are advantages of using Mock Service Worker (MSW)?
- Faster tests by avoiding real network requests
- Simulate edge cases like server error
- Ensures app resilience by testing error handling

4. Which scenarios can MSW handlers simulate for a POST endpoint? 
- Returning a success response with created data
- Simulating a 400 Bad Request error
- Returning a 500 Internal Server Error

5. What is the purpose of server.use() in an MSW test?
- To override or add specific request handlers during a test

6. How can you verify that a mock API call was triggered in MSW?
- Use vi.fn() to spy on the handler and check invocation

7. What does server.resetHandlers() do in MSW?
- Resets any custom handlers added during tests

8. How do you simulate a 500 Internal Server Error for the GET /posts endpoint in MSW?
- Use http.get('/posts', () => HttpResponse.error({ status: 500 }))

9. Which MSW feature ensures isolated tests by resetting state between them?
- server.resetHandlers()

10. What is the role of the getFormElements() function in the provided tests?
- Provides reusable selectors for form input and button elements