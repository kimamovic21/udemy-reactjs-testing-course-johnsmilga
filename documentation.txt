Udemy Course Mastering React Testing: RTL, Vitest & MSW - John Smilga


Section 01: Introduction

01. Course Info


Section 02: React Testing Library Tutorial

02. Main Course Repo !!! Important !!!

03. Install/Setup Course Repository
-otvorimo web stranicu: https://vite.dev/guide/
-preuzmemo folder 01-rtl-tutorial sa startnim folderima i fajlovima
-u terminalu udemo u folder cd 01-rtl-tutorial i ukucamo komandu npm i
-u jednom terminalu ukucamo komandu npm run dev
-u drugom terminalu ukucamo komandu npm test

04. Files and Folders

05. Explore First Test File
-otvorimo App.test.tsx komponentu

06. Test Validation Details

07. Vitest Info
-otvorimo web stranicu: https://vitest.dev

Quiz 1: React Testing Library Essentials Quiz

08. <SearchByText> - Component
-kreiramo folder starter sa tsx komponentama
-u eslint.config.js fajl dodajemo opciju: '@typescript-eslint/no-unused-vars': 'warn'
-u komponentu Sandbox.tsx importujemo funkcije useState i useEffect iz biblioteke React
-u komponentu App.tsx importujemo komponentu Sandbox.tsx

09. SearchByText Methods - Overview

10. SearchByText Methods - Test File
-u folderu tutorial/01-search-by-text kreiramo komponentu Sandbox.test.tsx
-u komponentu Sandbox.test.tsx importujemo funkcije render i screen iz paketa testing-library/react
-importujemo komponentu Sandbox.tsx
-pozivamo funkciju describe() sa dva argumenta
-prvi argument funkcije describe() je opis testova, dok je drugi argument anonimna funkcija
-u anonimnoj funkciji pozivamo funkciju test() sa dva argumenta
-prvi argument funkcije test() je opis testa, dok je drugi argument anonimna asinhrona funkcija
-u anonimnoj asinhronoj funkciji pozivamo funkcije render(<Sandbox />) i screen.debug()
-kreiramo varijablu const heading
-pozivamo funkciju expect(heading).toBeInTheDocument()
-pozivamo funkciju expect(screen.getByText(/react/i)).toBeInTheDocument()
-kreiramo varijable const phoneRegex i const phoneText
-pozivamo funkciju expect(phoneText).toBeInTheDocument()
-kreiramo varijablu const errorMessage 
-pozivamo funkciju expect(errorMessage).not.toBeInTheDocument()
-kreiramo varijablu const items
-pozivamo funkciju expect(items).toHaveLength(3)
-kreiramo varijablu const asyncMessage
-pozivamo funkciju expect(asyncMessage).toBeInTheDocument()

11. Test Driven Development Example
-u folderu tutorial/02-tdd-example kreiramo komponentu Sandbox.test.tsx
-u komponentu Sandbox.test.tsx importujemo funkcije render i screen iz paketa testing-library/react
-importujemo komponentu Sandbox.tsx
-pozivamo funkciju describe() sa dva argumenta
-u funkciji describe() prvi argument je opis testova, dok je drugi argument anonimna funkcija
-u anonimnoj funkciji pozivamo funkciju test() sa dva argumenta
-u funkciji test() prvi argument je opis testa, dok je drugi argument anonimna funkcija
-u anonimnoj funkciji pozivamo funkciju render()
-kreiramo varijablu const heading
-pozivamo funkciju expect(heading).toBeInTheDocument()
-u komponentu App.tsx importujemo komponentu Sandbox.tsx iz foldera tutorial/02-tdd-example